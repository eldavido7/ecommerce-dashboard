generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String      @id @default(uuid()) // Nano ID will be generated in code
  title       String
  description String
  price       Int // Naira in full units (e.g., 1500 = â‚¦1500)
  inventory   Int
  category    String
  tags        String[]
  barcode     String      @unique
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
  orderItems  OrderItem[]
  quantity    Int         @default(0) // inventory stock
  discounts     Discount[]   @relation("ProductDiscounts")
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

model Order {
  id           String       @id @default(uuid())
  firstName    String
  lastName     String
  email        String
  phone        String
  address      String
  city         String
  state        String
  postalCode   String
  country      String
  status       OrderStatus  @default(PENDING)
  subtotal     Float        @default(0) // Sum of OrderItem.subtotal
  total        Float        @default(0) // Final total after discount
  discountId   String?
  discount     Discount?    @relation(fields: [discountId], references: [id])
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now()) @updatedAt
  items        OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  subtotal  Float    // product.price * quantity
}

model Discount {
  id           String    @id @default(cuid())
  code         String    @unique
  description  String?
  type         DiscountType
  value        Float
  usageLimit   Int?
  usageCount   Int       @default(0)
  startsAt     DateTime
  endsAt       DateTime?
  isActive     Boolean
  minSubtotal   Float?   // optional condition
  products      Product[] @relation("ProductDiscounts") // for product-specific discounts
  orders        Order[]   // Orders this discount has been applied to
  conditions   Json?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

enum DiscountType {
  percentage
  fixed_amount
  free_shipping
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  lastActive DateTime @default(now())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ShippingOption {
  id           String   @id @default(cuid())
  name         String
  price        Float
  deliveryTime String
  status       ShippingStatus @default(ACTIVE)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum ShippingStatus {
  ACTIVE
  CONDITIONAL
}
